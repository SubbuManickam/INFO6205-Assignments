2023-02-03 13:53:42 INFO  Benchmark_Timer - Begin run: testWaitPeriods with 2 runs
2023-02-03 13:54:11 INFO  Benchmark_Timer - Begin run: testWaitPeriods with 2 runs
2023-02-04 11:19:09 INFO  Benchmark_Timer - Begin run: testWaitPeriods with 2 runs
2023-02-04 11:51:03 INFO  Benchmark_Timer - Begin run: Sort random array of 1000 elements with 1,000 runs
2023-02-04 11:51:07 INFO  Benchmark_Timer - Begin run: Sort ordered array of 1000 elements with 1,000 runs
2023-02-04 11:51:07 INFO  Benchmark_Timer - Begin run: Sort Reverse ordered array of 1000 elements with 1,000 runs
2023-02-04 11:51:07 INFO  Benchmark_Timer - Begin run: Sort Partially ordered array of 1000 elements with 1,000 runs
2023-02-04 11:52:27 INFO  Benchmark_Timer - Begin run: Sort random array of 1000 elements with 1,000 runs
2023-02-04 11:52:30 INFO  Benchmark_Timer - Begin run: Sort ordered array of 1000 elements with 1,000 runs
2023-02-04 11:52:30 INFO  Benchmark_Timer - Begin run: Sort Reverse ordered array of 1000 elements with 1,000 runs
2023-02-04 11:52:30 INFO  Benchmark_Timer - Begin run: Sort Partially ordered array of 1000 elements with 1,000 runs
2023-02-04 11:53:04 INFO  Benchmark_Timer - Begin run: Sort random array of 10000 elements with 10,000 runs
2023-02-04 11:54:46 INFO  Benchmark_Timer - Begin run: Sort random array of 10000 elements with 100 runs
2023-02-04 11:55:19 INFO  Benchmark_Timer - Begin run: Sort ordered array of 10000 elements with 10,000 runs
2023-02-04 11:55:21 INFO  Benchmark_Timer - Begin run: Sort Reverse ordered array of 10000 elements with 10,000 runs
2023-02-04 11:55:23 INFO  Benchmark_Timer - Begin run: Sort Partially ordered array of 10000 elements with 10,000 runs
2023-02-04 11:56:47 INFO  Benchmark_Timer - Begin run: Sort random array of 1000 elements with 100 runs
2023-02-04 11:56:47 INFO  Benchmark_Timer - Begin run: Sort ordered array of 1000 elements with 1,000 runs
2023-02-04 11:56:47 INFO  Benchmark_Timer - Begin run: Sort Reverse ordered array of 1000 elements with 1,000 runs
2023-02-04 11:56:54 INFO  Benchmark_Timer - Begin run: Sort Partially ordered array of 1000 elements with 1,000 runs
2023-02-04 11:59:12 INFO  Benchmark_Timer - Begin run: Sort random array of 2000 elements with 100 runs
2023-02-04 11:59:13 INFO  Benchmark_Timer - Begin run: Sort ordered array of 2000 elements with 2,000 runs
2023-02-04 11:59:14 INFO  Benchmark_Timer - Begin run: Sort Reverse ordered array of 2000 elements with 2,000 runs
2023-02-04 12:00:03 INFO  Benchmark_Timer - Begin run: Sort Partially ordered array of 2000 elements with 2,000 runs
2023-02-04 12:00:34 INFO  Benchmark_Timer - Begin run: Sort random array of 4000 elements with 100 runs
2023-02-04 12:00:39 INFO  Benchmark_Timer - Begin run: Sort ordered array of 4000 elements with 4,000 runs
2023-02-04 12:00:40 INFO  Benchmark_Timer - Begin run: Sort Reverse ordered array of 4000 elements with 4,000 runs
2023-02-04 12:06:02 INFO  Benchmark_Timer - Begin run: Sort Partially ordered array of 4000 elements with 4,000 runs
2023-02-04 12:07:08 INFO  Benchmark_Timer - Begin run: Sort random array of 500 elements with 100 runs
2023-02-04 12:07:08 INFO  Benchmark_Timer - Begin run: Sort ordered array of 500 elements with 500 runs
2023-02-04 12:07:08 INFO  Benchmark_Timer - Begin run: Sort Reverse ordered array of 500 elements with 500 runs
2023-02-04 12:07:09 INFO  Benchmark_Timer - Begin run: Sort Partially ordered array of 500 elements with 500 runs
2023-02-04 12:08:17 INFO  Benchmark_Timer - Begin run: Sort random array of 8000 elements with 100 runs
2023-02-04 12:08:38 INFO  Benchmark_Timer - Begin run: Sort ordered array of 8000 elements with 8,000 runs
2023-02-04 12:08:40 INFO  Benchmark_Timer - Begin run: Sort Reverse ordered array of 8000 elements with 8,000 runs
2023-02-04 13:40:24 INFO  Benchmark_Timer - Begin run: Sort random array of 8000 elements with 100 runs
2023-02-04 13:40:43 INFO  Benchmark_Timer - Begin run: Sort ordered array of 8000 elements with 8,000 runs
2023-02-04 13:40:44 INFO  Benchmark_Timer - Begin run: Sort Partially ordered array of 8000 elements with 8,000 runs
2023-03-11 12:20:58 INFO  SortBenchmark - SortBenchmark.main: null with word counts: []
2023-03-11 12:20:58 WARN  SortBenchmark - No word counts specified on the command line
2023-03-11 12:20:58 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-11 12:21:00 INFO  TimeLogger - Raw time per run (mSec):  9.12
2023-03-11 12:21:00 INFO  TimeLogger - Normalized time per run (n log n):  1.00
2023-03-11 12:21:00 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-11 12:21:02 INFO  TimeLogger - Raw time per run (mSec):  20.67
2023-03-11 12:21:02 INFO  TimeLogger - Normalized time per run (n log n):  2.27
2023-03-11 12:21:02 INFO  SortBenchmark - Beginning String sorts
2023-03-11 12:21:02 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-11 12:26:15 INFO  SortBenchmark - SortBenchmark.main: null with word counts: []
2023-03-11 12:26:15 WARN  SortBenchmark - No word counts specified on the command line
2023-03-11 12:26:15 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-11 12:26:17 INFO  TimeLogger - Raw time per run (mSec):  9.44
2023-03-11 12:26:17 INFO  TimeLogger - Normalized time per run (n log n):  1.04
2023-03-11 12:26:17 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-11 12:26:19 INFO  TimeLogger - Raw time per run (mSec):  20.19
2023-03-11 12:26:19 INFO  TimeLogger - Normalized time per run (n log n):  2.22
2023-03-11 12:26:19 INFO  SortBenchmark - Beginning String sorts
2023-03-11 12:26:19 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-11 18:35:38 INFO  SortBenchmark - SortBenchmark.main: null with word counts: []
2023-03-11 18:35:38 WARN  SortBenchmark - No word counts specified on the command line
2023-03-11 18:35:38 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-11 18:35:39 INFO  TimeLogger - Raw time per run (mSec):  7.00
2023-03-11 18:35:39 INFO  TimeLogger - Normalized time per run (n log n):  .77
2023-03-11 18:35:39 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-11 18:35:42 INFO  TimeLogger - Raw time per run (mSec):  18.12
2023-03-11 18:35:42 INFO  TimeLogger - Normalized time per run (n log n):  1.99
2023-03-11 18:35:42 INFO  SortBenchmark - Beginning String sorts
2023-03-11 18:35:42 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-11 18:35:48 INFO  SortBenchmark - SortBenchmark.main: null with word counts: []
2023-03-11 18:35:48 WARN  SortBenchmark - No word counts specified on the command line
2023-03-11 18:35:48 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-11 18:35:49 INFO  TimeLogger - Raw time per run (mSec):  6.31
2023-03-11 18:35:49 INFO  TimeLogger - Normalized time per run (n log n):  .69
2023-03-11 18:35:49 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-11 18:35:52 INFO  TimeLogger - Raw time per run (mSec):  18.40
2023-03-11 18:35:52 INFO  TimeLogger - Normalized time per run (n log n):  2.02
2023-03-11 18:35:52 INFO  SortBenchmark - Beginning String sorts
2023-03-11 18:35:52 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-11 18:36:03 INFO  SortBenchmark - SortBenchmark.main: null with word counts: []
2023-03-11 18:36:03 WARN  SortBenchmark - No word counts specified on the command line
2023-03-11 18:36:03 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-11 18:36:04 INFO  TimeLogger - Raw time per run (mSec):  7.23
2023-03-11 18:36:04 INFO  TimeLogger - Normalized time per run (n log n):  .79
2023-03-11 18:36:04 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-11 18:36:06 INFO  TimeLogger - Raw time per run (mSec):  18.73
2023-03-11 18:36:06 INFO  TimeLogger - Normalized time per run (n log n):  2.06
2023-03-11 18:36:06 INFO  SortBenchmark - Beginning String sorts
2023-03-11 18:36:06 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-11 18:46:03 INFO  SortBenchmark - SortBenchmark.main: null with word counts: []
2023-03-11 18:46:03 WARN  SortBenchmark - No word counts specified on the command line
2023-03-11 18:46:03 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-11 18:46:04 INFO  TimeLogger - Raw time per run (mSec):  6.19
2023-03-11 18:46:04 INFO  TimeLogger - Normalized time per run (n log n):  .68
2023-03-11 18:46:04 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-11 18:46:07 INFO  TimeLogger - Raw time per run (mSec):  17.60
2023-03-11 18:46:07 INFO  TimeLogger - Normalized time per run (n log n):  1.93
2023-03-11 18:46:07 INFO  SortBenchmark - Beginning String sorts
2023-03-11 18:46:07 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-11 18:46:16 INFO  SortBenchmark - SortBenchmark.main: null with word counts: []
2023-03-11 18:46:16 WARN  SortBenchmark - No word counts specified on the command line
2023-03-11 18:46:16 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-11 18:46:17 INFO  TimeLogger - Raw time per run (mSec):  6.62
2023-03-11 18:46:17 INFO  TimeLogger - Normalized time per run (n log n):  .73
2023-03-11 18:46:17 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-11 18:46:19 INFO  TimeLogger - Raw time per run (mSec):  18.33
2023-03-11 18:46:19 INFO  TimeLogger - Normalized time per run (n log n):  2.01
2023-03-11 18:46:19 INFO  SortBenchmark - Beginning String sorts
2023-03-11 18:46:19 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-12 13:05:19 INFO  SortBenchmark - SortBenchmark.main: null with word counts: [10000]
2023-03-12 13:05:19 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-12 13:05:20 INFO  TimeLogger - Raw time per run (mSec):  9.47
2023-03-12 13:05:20 INFO  TimeLogger - Normalized time per run (n log n):  1.04
2023-03-12 13:05:20 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-12 13:05:23 INFO  TimeLogger - Raw time per run (mSec):  19.03
2023-03-12 13:05:23 INFO  TimeLogger - Normalized time per run (n log n):  2.09
2023-03-12 13:05:23 INFO  SortBenchmark - Beginning String sorts
2023-03-12 13:05:23 INFO  SortBenchmarkHelper - Testing with words: 22,865 from eng-uk_web_2002_10K-sentences.txt
2023-03-12 13:05:23 INFO  SortBenchmark - Testing pure sorts with 844 runs of sorting 10,000 words
2023-03-12 13:05:23 INFO  SorterBenchmark - run: sort 10,000 elements using SorterBenchmark on class java.lang.String from 22,865 total elements and 844 runs using sorter: QuickSort basic
2023-03-12 13:05:23 INFO  Benchmark_Timer - Begin run: Helper for QuickSort basic with 10000 elements with 844 runs
2023-03-12 13:05:26 INFO  TimeLogger - Raw time per run (mSec):  3.15
2023-03-12 13:05:26 INFO  TimeLogger - Normalized time per run (n log n):  4.43
2023-03-12 13:05:26 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-12 13:06:17 INFO  SortBenchmark - SortBenchmark.main: null with word counts: [10000]
2023-03-12 13:06:17 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-12 13:06:18 INFO  TimeLogger - Raw time per run (mSec):  8.39
2023-03-12 13:06:18 INFO  TimeLogger - Normalized time per run (n log n):  .92
2023-03-12 13:06:18 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-12 13:06:21 INFO  TimeLogger - Raw time per run (mSec):  20.90
2023-03-12 13:06:21 INFO  TimeLogger - Normalized time per run (n log n):  2.30
2023-03-12 13:06:21 INFO  SortBenchmark - Beginning String sorts
2023-03-12 13:06:22 INFO  SortBenchmarkHelper - Testing with words: 22,865 from eng-uk_web_2002_10K-sentences.txt
2023-03-12 13:06:22 INFO  SortBenchmark - Testing pure sorts with 844 runs of sorting 10,000 words
2023-03-12 13:06:22 INFO  SorterBenchmark - run: sort 10,000 elements using SorterBenchmark on class java.lang.String from 22,865 total elements and 844 runs using sorter: QuickSort basic
2023-03-12 13:06:22 INFO  Benchmark_Timer - Begin run: Helper for QuickSort basic with 10000 elements with 844 runs
2023-03-12 13:06:25 INFO  TimeLogger - Raw time per run (mSec):  2.76
2023-03-12 13:06:25 INFO  TimeLogger - Normalized time per run (n log n):  3.88
2023-03-12 13:06:25 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-12 13:20:54 INFO  SortBenchmark - SortBenchmark.main: null with word counts: [10000]
2023-03-12 13:20:54 INFO  SortBenchmark - Beginning String sorts
2023-03-12 13:20:55 INFO  SortBenchmarkHelper - Testing with words: 22,865 from eng-uk_web_2002_10K-sentences.txt
2023-03-12 13:20:55 INFO  SortBenchmark - Testing pure sorts with 844 runs of sorting 10,000 words
2023-03-12 13:20:55 INFO  SorterBenchmark - run: sort 10,000 elements using SorterBenchmark on class java.lang.String from 22,865 total elements and 844 runs using sorter: QuickSort basic
2023-03-12 13:20:55 INFO  Benchmark_Timer - Begin run: Helper for QuickSort basic with 10000 elements with 844 runs
2023-03-12 13:20:59 INFO  TimeLogger - Raw time per run (mSec):  3.82
2023-03-12 13:20:59 INFO  TimeLogger - Normalized time per run (n log n):  5.37
2023-03-12 13:20:59 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-12 13:24:00 INFO  SortBenchmark - SortBenchmark.main: null with word counts: [10000]
2023-03-12 13:24:00 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-12 13:24:01 INFO  TimeLogger - Raw time per run (mSec):  8.03
2023-03-12 13:24:01 INFO  TimeLogger - Normalized time per run (n log n):  .88
2023-03-12 13:24:01 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-12 13:24:04 INFO  TimeLogger - Raw time per run (mSec):  19.92
2023-03-12 13:24:04 INFO  TimeLogger - Normalized time per run (n log n):  2.19
2023-03-12 13:24:04 INFO  SortBenchmark - Beginning String sorts
2023-03-12 13:24:04 INFO  SortBenchmarkHelper - Testing with words: 22,865 from eng-uk_web_2002_10K-sentences.txt
2023-03-12 13:24:04 INFO  SortBenchmark - Testing pure sorts with 844 runs of sorting 10,000 words
2023-03-12 13:24:04 INFO  SorterBenchmark - run: sort 10,000 elements using SorterBenchmark on class java.lang.String from 22,865 total elements and 844 runs using sorter: QuickSort basic
2023-03-12 13:24:04 INFO  Benchmark_Timer - Begin run: Helper for QuickSort basic with 10000 elements with 844 runs
2023-03-12 13:24:07 INFO  TimeLogger - Raw time per run (mSec):  3.27
2023-03-12 13:24:07 INFO  TimeLogger - Normalized time per run (n log n):  4.60
2023-03-12 13:24:07 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-12 13:24:49 INFO  SortBenchmark - SortBenchmark.main: null with word counts: [10000]
2023-03-12 13:24:49 INFO  Benchmark_Timer - Begin run: intArraysorter with 100 runs
2023-03-12 13:24:50 INFO  TimeLogger - Raw time per run (mSec):  8.96
2023-03-12 13:24:50 INFO  TimeLogger - Normalized time per run (n log n):  .98
2023-03-12 13:24:50 INFO  Benchmark_Timer - Begin run: integerArraysorter with 100 runs
2023-03-12 13:24:53 INFO  TimeLogger - Raw time per run (mSec):  23.73
2023-03-12 13:24:53 INFO  TimeLogger - Normalized time per run (n log n):  2.61
2023-03-12 13:24:53 INFO  SortBenchmark - Beginning String sorts
2023-03-12 13:24:54 INFO  SortBenchmarkHelper - Testing with words: 22,865 from eng-uk_web_2002_10K-sentences.txt
2023-03-12 13:24:54 INFO  SortBenchmark - Testing pure sorts with 844 runs of sorting 10,000 words
2023-03-12 13:24:54 INFO  SorterBenchmark - run: sort 10,000 elements using SorterBenchmark on class java.lang.String from 22,865 total elements and 844 runs using sorter: QuickSort basic
2023-03-12 13:24:54 INFO  Benchmark_Timer - Begin run: Helper for QuickSort basic with 10000 elements with 844 runs
2023-03-12 13:24:57 INFO  TimeLogger - Raw time per run (mSec):  3.37
2023-03-12 13:24:57 INFO  TimeLogger - Normalized time per run (n log n):  4.74
2023-03-12 13:24:57 INFO  SortBenchmark - Beginning LocalDateTime sorts
2023-03-12 17:05:21 INFO  Benchmark_Timer - Begin run: Sort array of 100 elements with 100 runs
2023-03-12 17:21:15 INFO  Benchmark_Timer - Begin run: Sort array of 100 elements with 100 runs
2023-03-12 17:22:44 INFO  Benchmark_Timer - Begin run: Sort array of 100 elements with 100 runs
2023-03-12 17:41:02 INFO  Benchmark_Timer - Begin run: Sort array of 100 elements with 100 runs
2023-03-12 17:41:17 INFO  Benchmark_Timer - Begin run: Sort array of 1000 elements with 100 runs
2023-03-12 17:41:37 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 100 runs
2023-03-12 17:42:25 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 100 runs
2023-03-12 17:43:33 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 100 runs
2023-03-12 17:43:50 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 100 runs
2023-03-12 17:44:07 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 100 runs
2023-03-12 17:45:01 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 100 runs
2023-03-12 17:47:06 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 17:54:26 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 17:54:37 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:24:23 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:24:24 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:30:39 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:30:40 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:30:40 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:35:01 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:35:02 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:35:02 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:41:55 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:41:55 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:41:55 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:43:34 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:43:34 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:43:34 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:45:02 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:45:03 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:45:03 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:46:58 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:46:59 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:46:59 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:47:16 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:47:16 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:47:16 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:56:06 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:56:07 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 18:56:07 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 19:00:02 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 19:00:03 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 19:00:03 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 19:02:16 INFO  Benchmark_Timer - Begin run: Sort array of 20000 elements with 1 runs
2023-03-12 19:02:16 INFO  Benchmark_Timer - Begin run: Sort array of 20000 elements with 1 runs
2023-03-12 19:02:16 INFO  Benchmark_Timer - Begin run: Sort array of 20000 elements with 1 runs
2023-03-12 19:03:26 INFO  Benchmark_Timer - Begin run: Sort array of 20000 elements with 1 runs
2023-03-12 19:03:29 INFO  Benchmark_Timer - Begin run: Sort array of 20000 elements with 1 runs
2023-03-12 19:03:29 INFO  Benchmark_Timer - Begin run: Sort array of 20000 elements with 1 runs
2023-03-12 19:05:15 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:05:15 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:05:15 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:05:21 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:05:22 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:05:22 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:05:26 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:05:27 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:05:27 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:06:52 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:07:03 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:07:03 INFO  Benchmark_Timer - Begin run: Sort array of 40000 elements with 1 runs
2023-03-12 19:08:00 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:01 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:01 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:07 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:07 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:07 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:11 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:12 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:12 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:16 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:16 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:16 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:21 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:22 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:22 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:32 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:33 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:08:33 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:09:20 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:10:14 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:10:14 INFO  Benchmark_Timer - Begin run: Sort array of 80000 elements with 1 runs
2023-03-12 19:11:49 INFO  Benchmark_Timer - Begin run: Sort array of 160000 elements with 1 runs
2023-03-12 19:11:50 INFO  Benchmark_Timer - Begin run: Sort array of 160000 elements with 1 runs
2023-03-12 19:11:50 INFO  Benchmark_Timer - Begin run: Sort array of 160000 elements with 1 runs
2023-03-12 19:12:54 INFO  Benchmark_Timer - Begin run: Sort array of 160000 elements with 1 runs
2023-03-12 19:16:18 INFO  Benchmark_Timer - Begin run: Sort array of 160000 elements with 1 runs
2023-03-12 19:16:18 INFO  Benchmark_Timer - Begin run: Sort array of 160000 elements with 1 runs
2023-03-12 19:37:57 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 19:37:57 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 19:37:57 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 19:38:07 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 19:38:07 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 19:38:07 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 20:06:06 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 20:06:06 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 20:06:06 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 20:06:24 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 20:06:25 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
2023-03-12 20:06:25 INFO  Benchmark_Timer - Begin run: Sort array of 10000 elements with 1 runs
